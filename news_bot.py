import asyncio
import feedparser
import telegram
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
import schedule
import time
from datetime import datetime, timedelta, timezone

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
import os
TELEGRAM_TOKEN = os.getenv("7700932777:AAGuwc0w9vq3QzmKX1qQfoFSI2hTahy0RVA")
TELEGRAM_USER_ID = int(os.getenv("58354833"))

# --- RSS-–ª–µ–Ω—Ç—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ ---
RSS_FEEDS = {
    '–£–º–Ω—ã–π –î–æ–º': 'https://news.google.com/rss/search?q=—É–º–Ω—ã–π+–¥–æ–º&hl=ru&gl=RU&ceid=RU:ru',
    '–ò–ò': 'https://news.google.com/rss/search?q=–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π+–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç&hl=ru&gl=RU&ceid=RU:ru',
}

bot = telegram.Bot(token=TELEGRAM_TOKEN)

# --- –ü–∞–º—è—Ç—å –æ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–∫–∞—Ö ---
sent_links = set()

# --- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ---
async def fetch_news():
    now = datetime.now(timezone.utc)
    one_week_ago = now - timedelta(days=7)
    new_articles = 0

    for category, feed_url in RSS_FEEDS.items():
        feed = feedparser.parse(feed_url)
        for entry in feed.entries:
            link = entry.link
            title = entry.title
            published_parsed = entry.get('published_parsed')

            if published_parsed:
                published_datetime = datetime(*published_parsed[:6], tzinfo=timezone.utc)
                if published_datetime >= one_week_ago:
                    if link not in sent_links:
                        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥–ø–∏—Å–∏
                        caption = f"üì∞ [{category}] {title}"

                        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
                        keyboard = InlineKeyboardMarkup([
                            [InlineKeyboardButton("–ß–∏—Ç–∞—Ç—å —Å—Ç–∞—Ç—å—é", url=link)]
                        ])

                        # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É
                        image_url = None
                        if 'media_content' in entry:
                            image_url = entry.media_content[0]['url']
                        elif 'media_thumbnail' in entry:
                            image_url = entry.media_thumbnail[0]['url']
                        else:
                            for l in entry.get('links', []):
                                if l.get('type', '').startswith('image/'):
                                    image_url = l.get('href')
                                    break

                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å —Ñ–æ—Ç–æ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
                        if image_url:
                            await bot.send_photo(chat_id=TELEGRAM_USER_ID, photo=image_url, caption=caption, reply_markup=keyboard)
                        else:
                            await bot.send_message(chat_id=TELEGRAM_USER_ID, text=caption, reply_markup=keyboard)

                        sent_links.add(link)
                        new_articles += 1
                        await asyncio.sleep(1)

    if new_articles == 0:
        await bot.send_message(chat_id=TELEGRAM_USER_ID, text="‚ùó –ù–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

# --- –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ ---
def schedule_job():
    asyncio.run(fetch_news())

schedule.every(30).minutes.do(schedule_job)

# –°—Ä–∞–∑—É –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
asyncio.run(fetch_news())
print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–æ–≤–æ—Å—Ç–∏ –±—É–¥—É—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç.")

while True:
    schedule.run_pending()
    time.sleep(10)